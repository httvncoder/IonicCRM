$cookies.put('territoryid',data[i].territoryid);
$cookies.put('ivz_empname',data[i].ivz_empname);
$cookies.put('ivz_empid',data[i].ivz_empid);
$cookies.put('ivz_password',data[i].ivz_password);
$cookies.put('ivz_emailcontact',data[i].ivz_emailcontact);
$cookies.put('ivz_leadermail',data[i].ivz_leadermail);
$cookies.put('ivz_ccmail',data[i].ivz_ccmail);
$cookies.put('name',data[i].name);
$cookies.put('description',data[i].description);
$cookies.put('ivz_statusempid',data[i].ivz_statusempid);

$cookies.territoryid;
$cookies.ivz_empname;
$cookies.ivz_empid;
$cookies.ivz_password;
$cookies.ivz_emailcontact;
$cookies.ivz_leadermail;
$cookies.ivz_ccmail;
$cookies.name;
$cookies.description;
$cookies.ivz_statusempid;

var chUser = $cookies.get('ivz_empid');
if(chUser){
  $ionicHistory.nextViewOptions({
    disableBack: true
  });
  $state.go('app.browse',{},{reload:true});
}

$state.go('app.playlists',{},{reload:true});



if($cookies.get('mastertype') == 3 || $cookies.get('mastertype') == 2){
  Data.logontype = true;
}else{
  Data.logontype = false;
}
Data.logonstatus = false;
$ionicHistory.nextViewOptions({
  disableBack: true
});

$scope.sendmailtosup = function(id,title,txt,callback){
  getTerEmp(id,function(data){
    if(data){
      var text = "เรียน  Sup./Sales Manger, รบกวนดำเนินการอนุมัติ"+txt+"เขตการขาย "+data[0].name+"ให้ด้วยครับ  ขอบคุณครับ  (อีเมลฉบับนี้ส่งอัตโนมัติจากระบบ CRM)";
      SendMail(data[0].ivz_leadermail,title,text);
      setTimeout(function(){
        callback();
      },2000);
    }
  });
}
$scope.sendmailtosales = function(id,title,txt,callback){
  getTerEmp(id,function(data){
    if(data){
      var text = "เรียน  sales, "+txt+"  ขอบคุณครับ  (อีเมลฉบับนี้ส่งอัตโนมัติจากระบบ CRM)";
      SendMail(data[0].ivz_emailcontact,title,text);
      setTimeout(function(){
        callback();
      },2000);
    }
  });
}
text = "เรียน  พนักงานขายเขต "+tscope.scope().territoryid+"    Sup./Sales Manger  ไม่อนุมัติ"+titleconfirm+"ลูกค้าชื่อ "+tscope.scope().accountnumber+':'+tscope.scope().Adjname+" เนื่องจาก "+txtear+"  ขอบคุณครับ     (อีเมลฉบับนี้ส่งอัตโนมัติจากระบบ CRM)";
.controller('ListOrderOtherCtrl', function ($scope, $stateParams, $cookies, Data, $state, $ionicLoading, $ionicHistory, $ionicModal, DataOrder) {
    $state.reload();
    $scope.Data = Data;
    $scope.item = {
       productid:'',
       productname:'',
       priceperunit:'',
       tatol:'',
       matchitem:''
    }
    $scope.salestype = true;
    $scope.$on('$ionicView.enter',function(){
      Data.showcart = false;
      $scope.ordedetail();
      if($stateParams.salestype == 1 || $stateParams.salestype == '1'){
        $scope.salestype = true;
      }else{
        $scope.salestype = false;
      }
    });
    $scope.loadData = function(){
      $scope.listorderdetail = [];
      var a = new MobileCRM.FetchXml.Entity('salesorderdetail');
        a.addAttribute('salesorderdetailid');//0
        a.addAttribute('salesorderid');//1
        a.addAttribute('productid');//2
        a.addAttribute('priceperunit');//3
        a.addAttribute('uomid');//4
        a.addAttribute('quantity');//5
      var l = a.addLink('product','productid','productid','outer');
        l.addAttribute('price');//6
        l.addAttribute('productnumber');//7
      var filter = new MobileCRM.FetchXml.Filter();
        filter.where('salesorderid','eq',$stateParams.orderid.trim());
        a.filter = filter;
      var fetch = new MobileCRM.FetchXml.Fetch(a);
        fetch.execute('array',function(data){
            if(data){
                for(var i in data){
                  $scope.listorderdetail.push({
                    salesorderdetail:data[i][0],
                    salesorderid:data[i][1],
                    productid:data[i][2].id,
                    productname:data[i][2].primaryName,
                    priceperunit:data[i][3],
                    uomid:data[i][4].id,
                    quality:data[i][5],
                    price:data[i][6],
                    productnumber:data[i][7],
                    tatol:parseInt(data[i][3]) * parseInt(data[i][5])
                  });
                }
              }
              $scope.$apply();
        },function(er){
          alert("ERROR 6333:"+er);
        },null);
    }

    $scope.plusquery = function(price,tatol){
      return parseInt(price) * parseInt(tatol);
    }

    $scope.ordedetail = function () {
        $scope.showLoadingProperTimesRegter('กำลังโหลดข้อมูล');
        $scope.loadData();
        setTimeout(function () {
            $ionicLoading.hide();
        }, 3000);
    }
    $scope.showmodal = function (id) {
        $ionicHistory.nextViewOptions({
            disableBack: true
        });
        $ionicHistory.goBack(-1);
    }

    $ionicModal.fromTemplateUrl('templates/comment/orderdetail.html', {
        id: 2,
        scope: $scope,
        animation: 'slide-in-up'
    }).then(function (modal) {
        $scope.modal2 = modal;
    });
    $scope.showmodal = function (id) {
        $scope.idmodal = id;
        if (id == 1) {
          console.log('loop accountiid get name territory');
          $scope.modal1.show();
        }else if(id == 2){
          $scope.modal2.show();
        }
    }
    $scope.closereject = function(){
      $scope.modal2.hide();
    }
    $scope.opendetail = function(id,name,price,tatol,quality){
      console.log(id+'\n'+name+'\n'+price+'\n'+tatol+'\n'+quality);
      $scope.item.productid = id;
      $scope.item.productname = name;
      $scope.item.priceperunit = price;
      $scope.item.tatol = tatol;
      $scope.item.matchitem = quality;
      $scope.showmodal(2);
    }

    /*------------- add product quality ---------------*/
    $scope.addpluss = function (data) {
        var m = 0;
        for (var i in $scope.listorderdetail) {
            m += parseInt($scope.listorderdetail[i].quality) * parseInt($scope.listorderdetail[i].priceperunit);
        }
        return m;
    }
    $scope.removeitem = function(id){
      $scope.listorderdetail.splice(id,1);
    }
    $scope.addplus = function (id) {
        if ($scope.item.matchitem <= 0) {
            $scope.item.matchitem = 0 + parseInt(id);
        } else {
            $scope.item.matchitem = parseInt($scope.item.matchitem) + parseInt(id);
        }
    };
    $scope.minus = function (id) {
        if ($scope.item.matchitem <= 0) {
            $scope.item.matchitem = 0;
            //$scope.item.tatol = parseInt($scope.item.priceperunit) * 0;
        } else {
            $scope.item.matchitem = parseInt($scope.item.matchitem) - parseInt(id);
        }
    };
    $scope.$watch('item.matchitem', function () {
        if ($scope.item.matchitem <= 0) {
            $scope.item.matchitem = 0;
            $scope.item.tatol = parseInt($scope.item.priceperunit) * 0;
        } else {
            $scope.item.tatol = parseInt($scope.item.priceperunit) * parseInt($scope.item.matchitem);
        }
        console.log('$scope.item.matchitem :' + $scope.item.matchitem);
    });
    $scope.additem = function () {
        if ($scope.listorderdetail.length > 0) {
            for (var i in $scope.listorderdetail) {
                if ($scope.listorderdetail[i].productid == $scope.item.productid) {
                    console.log('break ' + i);
                    $scope.listorderdetail[i].tatol = parseInt($scope.item.tatol);
                    $scope.listorderdetail[i].quality = parseInt($scope.item.matchitem);
                    break;
                }
            }
        }
        setTimeout(function () {
            $scope.closereject();
        }, 1000);
    }
    $scope.$watch('listorderdetail',function(){
      $scope.loading();
    });
    function setApproveOrder(){
      var ups = new MobileCRM.DynamicEntity('salesorder',$stateParams.orderid.trim());
          ups.properties.statuscode = parseInt(917970000);
          ups.save(function(er){
            if(er){
              alert('error 6436 '+er);
            }else{
              //call function insert deatil
              //alert('approved done');
              try {
                deleteorderdetail();
              } catch (e) {
                alert('error 6445 '+e);
              }
            }
          });
    }

    function deleteorderdetail(){
      $scope.showLoadingProperTimesRegter('กำลังทำแก้ไขข้อมูล');
      console.log('delete orderdetail');
      //call function insert orderdetail
      var x = 0;
      var loopArray = function(arr){
        getDelete(x,function(){
          x++;
          if(x < arr.length){
            loopArray(arr);
          }else{
            //alert('delete done');
            orderdetailproduct();
          }
        });
      }
      loopArray($scope.listorderdetail);
      function getDelete(i,callback){
          try {
            MobileCRM.DynamicEntity.deleteById("salesorderdetail",$scope.listorderdetail[i].salesorderdetail,
            function () {

            },function (er) {
                              MobileCRM.bridge.alert("An error occurred: " + er);
                            });
          } catch (e) {
            alert('error 6479 '+er);
          } finally {
            setTimeout(function(){
              callback();
            },10);
          }
      }
    }

    function orderdetailproduct(){
      //loop approve
      var x = 0;
      var loopArray = function(arr){
        inSertDetail(x,function(){
          x++;
          if(x < arr.length){
            loopArray(arr);
          }else{
            //alert('insert detail done ');
            $ionicLoading.hide();
            setTimeout(function(){
              switch ($scope.salestype) {
                case true:
                  $ionicHistory.goBack(-1);
                  break;
                case false:
                  $scope.sendmailtosup($stateParams.terid.trim(),'เปิดใบสั่งขาย(สนับสนุนขาย)','เปิดใบสั่งขาย(สนับสนุนขาย) ร้าน'+$stateParams.accountname,function(){
                    //alert('special order sendmail');
                    $ionicHistory.goBack(-1);
                  });
                  break;
              }
            },10);
          }
        });
      }
      loopArray($scope.listorderdetail);
      function inSertDetail(i,callback){
        $scope.showLoadingProperTimesRegter('กำลังทำการบันทึกข้อมูล '+$scope.listorderdetail[i].productname);
        var ins = new MobileCRM.DynamicEntity.createNew('salesorderdetail');
            ins.properties.salesorderid = new MobileCRM.Reference('salesorder',$stateParams.orderid.trim());
            ins.properties.productid = new MobileCRM.Reference('product',$scope.listorderdetail[i].productid);
            ins.properties.ispriceoverridden = parseInt(0);
            ins.properties.priceperunit = $scope.listorderdetail[i].priceperunit;
            ins.properties.uomid = new MobileCRM.Reference('uom',$scope.listorderdetail[i].uomid);
            ins.properties.quantity = $scope.listorderdetail[i].quality;
            ins.save(function(er){
              if(er){
                alert(er);
              }else{
                setTimeout(function(){
                  callback();
                },1000);
              }
          });
      }
    }
    $scope.confirmorder = function(){
      switch ($scope.salestype) {
        case true:
            alert('default order');
            setApproveOrder();
          break;
        case false:
            alert('sales order support');
            deleteorderdetail();
          break;
      }
    }
    /*--------------- end -----------------*/
})
